name: Build installers for all operating systems

on:
  release:
    types: [ created ]

jobs:
  linux:
    name: Build for Linux
    runs-on: ubuntu-20.04

    steps:    
    - name: Checkout repository and submodules
      uses: actions/checkout@v2

    - name: Prepare data
      run: |
        gzip -d ${{ github.workspace }}/files/ref2.h5ad.gz

    - name: Install system packages
      run: |
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt-get update
        sudo apt-get install python3.9 python3.9-tk python3.9-venv python3.9-dev pip  # virtualenv

    - name: Create virtul environment
      run: |
        python3.9 -m venv ${{ github.workspace }}/env
        source ${{ github.workspace }}/env/bin/activate

    - name: Install Python dependencies
      run: |
        source ${{ github.workspace }}/env/bin/activate
        pip install --no-cache-dir -r requirements_linux.txt

    - name: Install pyInstaller
      run: |
        source ${{ github.workspace }}/env/bin/activate
        pip install --no-cache-dir pyinstaller==5.0.1

    - name: Build installer
      run: |
        cd ${{ github.workspace }}
        source env/bin/activate
        pyinstaller --clean -y -n "run_aCSF" --copy-metadata anndata --copy-metadata scvi-tools --copy-metadata scanpy --hidden-import PIL --hidden-import PIL._imagingtk --hidden-import PIL._tkinter_finder --add-data="env/lib/python3.9/site-packages/numpy.libs/*:numpy.libs" --add-data="env/lib/python3.9/site-packages/scipy.libs/*:scipy.libs" --add-data="env/lib/python3.9/site-packages/Pillow.libs/*:Pillow.libs" --add-data="env/lib/python3.9/site-packages/h5py.libs/*:h5py.libs" --add-data="files/*:files" annotateCSF.py

    - name: Create zip archive
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd ${{ github.workspace }}/dist/run_aCSF
        7z a -mx=9 ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Linux.7z *

    - name: Upload zip archive to Sciebo
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd ${{ github.workspace }}
        curl -X PUT -u ${{ secrets.SCIEBO_USER }}:${{ secrets.SCIEBO_PASSWORD }} --data-binary @"annotateCSF_${{ github.event.release.tag_name }}_Linux.7z" "https://uni-muenster.sciebo.de/remote.php/webdav/annotateCSF_release/annotateCSF_${{ github.event.release.tag_name }}_Linux.7z"

    - name: Upload release binaries
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Linux.7z

    - name: Install CUDA dependencies
      run: |
        source ${{ github.workspace }}/env/bin/activate
        pip install --no-cache-dir torch==1.9.1+cu111 -f https://download.pytorch.org/whl/torch_stable.html

    - name: Build CUDA installer
      run: |
        cd ${{ github.workspace }}
        source env/bin/activate
        pyinstaller --clean -y -n "run_aCSF" --copy-metadata anndata --copy-metadata scvi-tools --copy-metadata scanpy --hidden-import PIL --hidden-import PIL._imagingtk --hidden-import PIL._tkinter_finder --add-data="env/lib/python3.9/site-packages/numpy.libs/*:numpy.libs" --add-data="env/lib/python3.9/site-packages/scipy.libs/*:scipy.libs" --add-data="env/lib/python3.9/site-packages/Pillow.libs/*:Pillow.libs" --add-data="env/lib/python3.9/site-packages/h5py.libs/*:h5py.libs" --add-data="files/*:files" annotateCSF.py

    - name: Create CUDA zip archive
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd ${{ github.workspace }}/dist/run_aCSF
        7z a -mx=9 ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Linux_CUDA-1.7z * -x!annoy -x!caffe2 -x!torch   # libc10_cuda.so libcudart* libnvToolsExt* libshm.so libtorch* run_aCSF
        7z a -mx=9 ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Linux_CUDA-2.7z annoy/* caffe2/* torch/*

    - name: Upload CUDA zip archive to Sciebo
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd ${{ github.workspace }}
        curl -X PUT -u ${{ secrets.SCIEBO_USER }}:${{ secrets.SCIEBO_PASSWORD }} --data-binary @"annotateCSF_${{ github.event.release.tag_name }}_Linux_CUDA-1.7z" "https://uni-muenster.sciebo.de/remote.php/webdav/annotateCSF_release/annotateCSF_${{ github.event.release.tag_name }}_Linux_CUDA-1.7z"
        curl -X PUT -u ${{ secrets.SCIEBO_USER }}:${{ secrets.SCIEBO_PASSWORD }} --data-binary @"annotateCSF_${{ github.event.release.tag_name }}_Linux_CUDA-2.7z" "https://uni-muenster.sciebo.de/remote.php/webdav/annotateCSF_release/annotateCSF_${{ github.event.release.tag_name }}_Linux_CUDA-2.7z"

    - name: Upload CUDA release binaries (1)
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Linux_CUDA-1.7z

    - name: Upload CUDA release binaries (2)
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Linux_CUDA-2.7z

    - name: Test installer
      run: |
        cd ${{ github.workspace }}/dist/run_aCSF
#        ./run_aCSF


  windows:
    name: Build for Windows
    runs-on: windows-2022

    steps:    
    - name: Checkout repository and submodules
      uses: actions/checkout@v2

    - name: Prepare data
      run: |
        python ${{ github.workspace }}/unzip.py -d ${{ github.workspace }}/files/ref2.h5ad.gz

    - name: Create virtual environment
      shell: cmd
      run: |
        python -m venv "C:\env"

    - name: Install Python dependencies
      shell: cmd
      run: |
        call C:\env\Scripts\activate.bat
        pip install --no-cache-dir -r requirements_win.txt

    - name: Install pyInstaller
      shell: cmd
      run: |
        call C:\env\Scripts\activate.bat
        pip install --no-cache-dir pyinstaller==5.0.1

    - name: Build installer
      shell: cmd
      run: |
        cd ${{ github.workspace }}
        call C:\env\Scripts\activate.bat
        pyinstaller --clean -y -n "run_aCSF" --win-no-prefer-redirects --copy-metadata anndata --copy-metadata scvi-tools --copy-metadata scanpy --add-data="C:/env/Lib/site-packages/tables.libs/*;./tables.libs" --add-data="files/*;files" --icon="files/icon3.ico" annotateCSF.py

#    - name: Install minizip-ng
#      if: startsWith(github.ref, 'refs/tags/')
#      run: |
#        (New-Object Net.WebClient).DownloadFile("https://github.com/zlib-ng/minizip-ng/releases/download/3.0.6/minizip-ng-windows.zip", "C:\minizip-ng.zip")
#        Expand-Archive -Path "C:\minizip-ng.zip" -DestinationPath "C:\"

    - name: Create zip archive
      if: startsWith(github.ref, 'refs/tags/')
      shell: cmd
      run: |
        cd /d ${{ github.workspace }}\dist\run_aCSF
        7z a -mx=9 ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Win.7z *
#        C:\minizip.exe -9 -k 2048000 "C:\annotateCSF_${{ github.event.release.tag_name }}_Win.zip" .
#        Add-Type -AssemblyName System.IO.Compression.FileSystem
#        [System.IO.Compression.ZipFile]::CreateFromDirectory("${{ github.workspace }}\dist\run_aCSF", "${{ github.workspace }}\annotateCSF_${{ github.event.release.tag_name }}_Win.zip", [System.IO.Compression.CompressionLevel]::Optimal, $false)
#        Compress-Archive -Path * -DestinationPath "${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Win.zip"

    - name: Upload zip archive to Sciebo
      if: startsWith(github.ref, 'refs/tags/')
      shell: cmd
      run: |
        cd ${{ github.workspace }}
        curl -u ${{ secrets.SCIEBO_USER }}:${{ secrets.SCIEBO_PASSWORD }} -T "annotateCSF_${{ github.event.release.tag_name }}_Win.7z" "https://uni-muenster.sciebo.de/remote.php/webdav/annotateCSF_release/annotateCSF_${{ github.event.release.tag_name }}_Win.7z"

    - name: Upload release binaries
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Win.7z

    - name: Install CUDA dependencies
      shell: cmd
      run: |
        call C:\env\Scripts\activate.bat
        pip install --no-cache-dir torch==1.9.1+cu111 -f https://download.pytorch.org/whl/torch_stable.html

    - name: Build CUDA installer
      shell: cmd
      run: |
        cd ${{ github.workspace }}
        call C:\env\Scripts\activate.bat
        pyinstaller --clean -y -n "run_aCSF" --win-no-prefer-redirects --copy-metadata anndata --copy-metadata scvi-tools --copy-metadata scanpy --add-data="C:/env/Lib/site-packages/tables.libs/*;./tables.libs" --add-data="files/*;files" --icon="files/icon3.ico" annotateCSF.py

    - name: Create CUDA zip archive
      if: startsWith(github.ref, 'refs/tags/')
      shell: cmd
      run: |
        cd /d ${{ github.workspace }}\dist\run_aCSF
        7z a -mx=9 ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Win_CUDA.7z *
#        7z a -mx=9 ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Win_CUDA-1.7z * -x!annoy -x!caffe2 -x!torch
#        7z a -mx=9 ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Win_CUDA-2.7z annoy/* caffe2/* torch/*

    - name: Upload CUDA zip archive to Sciebo
      if: startsWith(github.ref, 'refs/tags/')
      shell: cmd
      run: |
        cd ${{ github.workspace }}
        curl -u ${{ secrets.SCIEBO_USER }}:${{ secrets.SCIEBO_PASSWORD }} -T "annotateCSF_${{ github.event.release.tag_name }}_Win_CUDA.7z" "https://uni-muenster.sciebo.de/remote.php/webdav/annotateCSF_release/annotateCSF_${{ github.event.release.tag_name }}_Win_CUDA.7z"

    - name: Upload CUDA release binaries
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_Win_CUDA.7z

    - name: Test installer
      shell: cmd
      run: |
        cd /d ${{ github.workspace }}\dist\run_aCSF
#       run_aCSF.exe


  macos:
    name: Build for MacOS
    runs-on: macos-12

    steps:    
    - name: Checkout repository and submodules
      uses: actions/checkout@v2

    - name: Prepare data
      run: |
        gzip -d ${{ github.workspace }}/files/ref2.h5ad.gz

    - name: Install system packages
      run: |
        brew install python@3.9 python-tk@3.9

    - name: Install Python dependencies
      run: |
        pip3 install --no-cache-dir -r requirements_linux.txt
#        pip3 install --no-cache-dir torch==1.9.1+cu111 -f https://download.pytorch.org/whl/torch_stable.html

    - name: Install pyInstaller
      run: |
        pip3 install --no-cache-dir pyinstaller==5.0.1

    - name: Build installer
      run: |
        cd ${{ github.workspace }}
        pyinstaller --clean -y -n "run_aCSF" --target-arch x86_64 --copy-metadata anndata --copy-metadata scvi-tools --copy-metadata scanpy --add-data="files/*:files" annotateCSF.py

    - name: Create zip archive
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd ${{ github.workspace }}/dist/run_aCSF
#        zip -9 -r ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_MacOS.zip *
        7z a -mx=9 ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_MacOS.7z *

    - name: Upload zip archive to Sciebo
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd ${{ github.workspace }}
        curl -X PUT -u ${{ secrets.SCIEBO_USER }}:${{ secrets.SCIEBO_PASSWORD }} --data-binary @"annotateCSF_${{ github.event.release.tag_name }}_MacOS.7z" "https://uni-muenster.sciebo.de/remote.php/webdav/annotateCSF_release/annotateCSF_${{ github.event.release.tag_name }}_MacOS.7z"

    - name: Upload release binaries
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ github.workspace }}/annotateCSF_${{ github.event.release.tag_name }}_MacOS.7z

    - name: Test installer
      run: |
        cd ${{ github.workspace }}/dist/run_aCSF
#        ./run_aCSF